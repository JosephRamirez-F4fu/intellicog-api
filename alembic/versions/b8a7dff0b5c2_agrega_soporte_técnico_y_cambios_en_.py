"""Agrega soporte tÃ©cnico y cambios en usuario

Revision ID: b8a7dff0b5c2
Revises:
Create Date: 2025-06-25 06:40:53.791466

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "b8a7dff0b5c2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column(
            "last_name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "speciality", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column(
            "email", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column(
            "password", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "passwordresetcodes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_passwordresetcodes_code"), "passwordresetcodes", ["code"], unique=False
    )
    op.create_table(
        "patient",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("dni", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "last_name", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False
        ),
        sa.Column("sex", sa.Enum("FEMALE", "MALE", name="sex"), nullable=True),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("age_education", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "refreshtoken",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("jti", sa.Uuid(), nullable=False),
        sa.Column("revoked", sa.Boolean(), nullable=False),
        sa.Column("user_agent", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ip_address", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_refreshtoken_token"), "refreshtoken", ["token"], unique=False
    )
    op.create_table(
        "evaluation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column(
            "manual_classification",
            sa.Enum(
                "NORMAL",
                "MCI",
                "MILD_DEMENTIA",
                "MODERATE_DEMENTIA",
                "SEVERE_DEMENTIA",
                "DEMENTIA",
                "ALZHEIMERS",
                "MCI_DEMENTIA",
                name="classification",
            ),
            nullable=True,
        ),
        sa.Column(
            "model_classification",
            sa.Enum(
                "NORMAL",
                "MCI",
                "MILD_DEMENTIA",
                "MODERATE_DEMENTIA",
                "SEVERE_DEMENTIA",
                "DEMENTIA",
                "ALZHEIMERS",
                "MCI_DEMENTIA",
                name="classification",
            ),
            nullable=True,
        ),
        sa.Column("model_probability", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("modality", sa.Enum("RF", "CNN", name="modality"), nullable=True),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "patientcomorbilites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("hipertension", sa.Boolean(), nullable=True),
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patient.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("patient_id"),
    )
    op.create_table(
        "clinicdata",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("vitamin_d", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("vit_b12", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("adl", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("iadl", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("berg", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("potassium", sa.Numeric(precision=6, scale=3), nullable=True),
        sa.Column("stress", sa.Boolean(), nullable=True),
        sa.Column("evaluation_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("evaluation_id"),
    )
    op.create_table(
        "clinicresults",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("evaluation_id", sa.Integer(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("evaluation_id"),
    )
    op.create_table(
        "mriimage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("evaluation_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["evaluation_id"],
            ["evaluation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("evaluation_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("mriimage")
    op.drop_table("clinicresults")
    op.drop_table("clinicdata")
    op.drop_table("patientcomorbilites")
    op.drop_table("evaluation")
    op.drop_index(op.f("ix_refreshtoken_token"), table_name="refreshtoken")
    op.drop_table("refreshtoken")
    op.drop_table("patient")
    op.drop_index(op.f("ix_passwordresetcodes_code"), table_name="passwordresetcodes")
    op.drop_table("passwordresetcodes")
    op.drop_table("user")
    # ### end Alembic commands ###
